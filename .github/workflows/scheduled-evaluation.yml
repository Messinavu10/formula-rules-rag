name: Scheduled Evaluation

on:
  schedule:
    # Run every Monday at 2 AM UTC
    - cron: '0 2 * * 1'
  workflow_dispatch: # Allow manual triggering

env:
  PYTHON_VERSION: '3.11'
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
  LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
  PINECONE_INDEX_NAME: 'fia-rules'

jobs:
  scheduled-evaluation:
    name: Scheduled Agent Evaluation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        
    - name: Run comprehensive evaluation
      run: |
        python scripts/evaluate_agent.py --verbose
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
        LANGSMITH_API_KEY: ${{ secrets.LANGSMITH_API_KEY }}
        PINECONE_INDEX_NAME: ${{ env.PINECONE_INDEX_NAME }}
        
    - name: Upload evaluation results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: scheduled-evaluation-results
        path: src/evaluation/*.json
        
    - name: Create evaluation summary
      run: |
        echo "# 📊 Weekly Evaluation Report" > evaluation-summary.md
        echo "" >> evaluation-summary.md
        echo "**Date**: $(date)" >> evaluation-summary.md
        echo "**Commit**: ${{ github.sha }}" >> evaluation-summary.md
        echo "" >> evaluation-summary.md
        echo "## 📈 Results Summary" >> evaluation-summary.md
        echo "" >> evaluation-summary.md
        
        # Check if evaluation files exist and extract metrics
        if [ -f "src/evaluation/fia_agent_evaluation_*.json" ]; then
          echo "✅ Evaluation completed successfully" >> evaluation-summary.md
          echo "" >> evaluation-summary.md
          echo "### 📋 Evaluation Files" >> evaluation-summary.md
          echo "- \`src/evaluation/fia_agent_evaluation_*.json\`" >> evaluation-summary.md
          echo "" >> evaluation-summary.md
          echo "### 🔍 Next Steps" >> evaluation-summary.md
          echo "1. Review evaluation results" >> evaluation-summary.md
          echo "2. Check for any performance regressions" >> evaluation-summary.md
          echo "3. Update documentation if needed" >> evaluation-summary.md
        else
          echo "❌ Evaluation failed or no results found" >> evaluation-summary.md
        fi
        
    - name: Upload evaluation summary
      uses: actions/upload-artifact@v3
      with:
        name: evaluation-summary
        path: evaluation-summary.md
        
    - name: Comment on latest commit (if evaluation failed)
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const { data: comments } = await github.rest.repos.listCommitComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha
          });
          
          const hasExistingComment = comments.some(comment => 
            comment.body.includes('Scheduled evaluation failed')
          );
          
          if (!hasExistingComment) {
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `## 🚨 Scheduled Evaluation Failed
              
              The weekly scheduled evaluation has failed. Please check the workflow logs for details.
              
              **Workflow**: [Scheduled Evaluation](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
              **Commit**: ${{ github.sha }}
              **Date**: ${new Date().toISOString()}
              
              ---
              *This comment was automatically generated by the CI/CD pipeline.*`
            });
          }
